*데이터 모델링 유의사항 :
어플리케이션과 데이터 간의 연계성이 높으면 어플리케이션이 변경될 때마다 데이터
모델도 변경되어야 하는 상황이 생길 수 있다. -> 비유연성을 가지게 된다.

*데이터 모델링을 할 때 지양해야 할 점 : 중복, 비유연성, 비일관성

*발생시점에 따른 엔터티 분류(기중행)
- 기본 엔터티
- 중심 엔터티
- 행위 엔터티

*유/무형에 따른 엔터티 분류(유개사)
- 유형 엔터티
- 개념 엔터티
- 사건 엔터티

*ERD에서는 존재에 의한 관계와 행위에 의한 관계를 구분하지 않고 표현하며
클래스 다이어그램에서는 이것을 구분하여 연관 관계와 의존 관계로 표현한다.


*반정규화의 테이블 분할
- 수직 분할 : 테이블의 일부 속성을 별도의 테이블로 분리하는 것
- 수평 분할 : 테이블의 특정 인스턴스를 별도의 테이블로 분할하는 것

*SUBSTR(STBSTRING) : 문자열의 원하는 부분만 잘라서 반환해주는 함수.
- SUBSTR(문자열, 시작점 [,길이])

*질문1 : p.110 문제에서는 RTRIM('QL DEVELOPER', 'SQL') 결과 : QL DEVELOPER로
SQL한덩어리가 아니면 안지워졌는데(QL이 안지워짐)
p.113에서는 RTRIM('SQL', 'LE') 결과가 SQ인거임?(LE 한덩어리가 아닌데 L이 지워짐)


*Natural Join은 ON절 쓸 수 없음.

*CASE문에서는 ELSE 뒤의 값이 DEFAULT 값이 되고 별도의 ELSE가 없을 경우 NULL값이
DEFAULT 값이 된다. DECODE문에서는 인수 개수가 짝수일 때 마지막 값이 DEFAULT값이 된다.

*0으로 나누기하면 에러뜸

*
NULLIF(인수1, 인수2) : 인수1과 인수2가 같으면 NULL, 같지않으면 인수1을 반환
NVL(인수1, 인수2) : 인수1의 값이 NULL이면 인수2 반환, NULL 아니면 인수1 반환
COALESCE(인수1, 인수2, 인수3~~) : 각 행마다 NULL이 아닌 최초의 인수를 반환 


*NATURAL JOIN은 두 테이블에서 같은 이름을 가진 컬럼들이 모두 동일한 데이터를
가지고 있을 경우 그 공통컬럼 앞에 OWNER 명을 붙이면 에러가 발생한다.


